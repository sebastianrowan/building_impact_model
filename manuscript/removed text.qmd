


<!-- ~~To mitigate the risk posed by future floods under climate change, it is necessary to comprehensively account for all sources of GHG emissions as well as to develop effective and sustainable FRM solutions. In the existing literature, there is a lack of research investigating the extent to which floods and their effects may contribute to greenhouse gas emissions or the extent to which FRM projects may reduce the GHG emissions caused by flood events. There is also a lack of research incorporating uncertainty into flood risk assessment methodologies.~~  -->

<!-- ~~The results of this work will help planners better assess the environmental impacts of future flood events and the potential benefits of future FRM projects. Incorporating these impacts into cost-benefit analyses may justify additional investment into flood mitigation efforts and may also promote the development of more sustainable FRM practices.~~ -->

```{r damage function comparison}
#| label: fig-dmgfns
#| fig-cap: Plot of fragility curves developed for interior doors, exterior doors, and wall outlets. 


# Example damage functions from @gec2006 and the present study.
d <- seq(-1, 7, .1)

fp_int <- ptri(q = d, min = 0, max = 2, mode = 0.5)
fp_ext <- ptri(q = d, min = 1, max = 4, mode = 2)
fp_out <- ptri(q = d, min = 1, max = 2, mode = 1.0001)


dfunc <- data.frame(d, fp_int, fp_ext, fp_out)
colnames(dfunc) <- c('depth', 'Interior Doors', 'Exterior Doors', 'Wall Outlets')

dfunc <- dfunc %>% 
  tidyr::pivot_longer(
    c('Interior Doors', 'Exterior Doors', 'Wall Outlets'),
    names_to = "dmg_func",
    values_to = "p_fail"
  )

ggplot(dfunc) +
  geom_line(aes(x = depth, y = p_fail, color = dmg_func), lwd = 2) +
  scale_y_continuous(labels = scales::percent) +
  scale_color_discrete(name = "") +
  labs(
    # title = "Sample Damage and Fragility Functions",
    x = "Flood Depth (ft)",
    y = "Probability of Failure"
  ) +
  theme(
    legend.position = "bottom"
  ) + 
  guides(color = guide_legend(nrow = 1))
```



<!-- 
Idea to add uncertainty to drywall calculation:
- add additional height to flood depth during damage calculation to account for moisture wicking
- GEC assume water can wick up to 2 feet above the flood depth
- damage depth = flood depth + (rng.triang(min = 0, max = 2, mode = 1))
 -->



### Environmental Input Output Analysis {#sec-useeio}

**Weiwei, I have the data to add this into the model, and I think I could have these additional results incorporated within 1 day of work. Do you think this is worthwhile to include to make our analysis more robust?**

To cross-validate and verify the results of our GHG analysis, we also calculated the GHG emissions associated with each component through an economic input-output analysis. Unlike previous studies which have performed this type of analysis using building-level damage costs, we associate each individual component with a certain industry code and calculate the carbon footprint associated with replacing one unit of the given item based on the unit cost data collected in the previous step. We used the U.S. EPA's Environmentally Extended Input-Output (USEEIO) model v.2.1 [@ingwersen2022] and the `useeior` package [@li2022] for the R statistical programming language [@rcoreteam2023] to run this analysis for each component. Average unit GHG emissions for each component are shown in @tbl-useeio.

```{r useeio data table}
#| tbl-cap: Mean unit costs and GHG emissions for structure components from USEEIO analysis
#| label: tbl-useeio
#| warning: false
#| results: asis
#| 
useeio <- readxl::read_xlsx("../data/component_quantities_and_depth_damage.xlsx", sheet = "useeio_results")


useeio %>%
  filter(!(component %in% c("Facade", "Roof Cover and underlayment combined")))   %>%
  mutate(
    unit_cost = as.numeric(unit_cost),
    kg_co2 = as.numeric(kg_co2)
  ) %>%
  group_by(component, functional_unit) %>%
  summarize(
    unit_cost_mean = mean(unit_cost),
    ghg_mean = mean(kg_co2)
  ) %>%
  as.data.frame() %>%
  select(component, functional_unit, unit_cost_mean, ghg_mean) %>%
  gt() %>%
  fmt_currency(columns = unit_cost_mean) %>%
  cols_label(
    component = "Component",
    functional_unit = "Functional Unit",
    unit_cost_mean = "Mean Unit Cost",
    ghg_mean = md("Unit CO~2eq~ Mean (kg)")
  ) %>%
  as_latex()
```